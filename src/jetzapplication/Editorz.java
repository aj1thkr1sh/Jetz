/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jetzapplication;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Krish
 */
public class Editorz extends javax.swing.JFrame {

    StringTokenizer tokens=null;
    String temp="";
    String Line="";
    String line;
    String className="";
    
    /**
     * Creates new form Editorz
     */
    public Editorz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jPanel2 = new javax.swing.JPanel();
        runButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        editorArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        compileButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        jMenu4.setText("jMenu4");

        jMenu5.setText("jMenu5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 368, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        outputArea.setColumns(20);
        outputArea.setRows(5);
        jScrollPane2.setViewportView(outputArea);

        editorArea.setColumns(20);
        editorArea.setRows(5);
        jScrollPane1.setViewportView(editorArea);

        jLabel1.setText("Console");

        compileButton.setText("Compile");
        compileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("New");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Run");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Help");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem3.setText("Help");
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(compileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2284, 2284, 2284)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(compileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        editorArea.setText("");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        runButton.doClick();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
            
        if(className.length()!=0){
            String strings=editorArea.getText();
            JetzCompilerClass compiler=new JetzCompilerClass();
            compiler.run(className);
        }else{
            JOptionPane.showMessageDialog(rootPane,"Please Compile the File with no Eroor");
        }
        className="";
        
       
            /*
            String strings=editorArea.getText();
            JetzCompilerClass compiler=new JetzCompilerClass();
            compiler.compile(strings);
            */
            
            /*
            int length,i,j,count=0,commentCount=0;
            Line+="";
            boolean flag=false;
            
            FileWriter writer=null;
            try {
            writer=new FileWriter("use_temp.java",false);
            } catch (IOException ex) {
            Logger.getLogger(Editorz.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane,ex.getMessage());
            }
            
            tokens=new StringTokenizer(strings,"\n");
            while(tokens.hasMoreTokens()){
            //Line+=tokens.nextToken();
            Line="";
            temp="";
            String fileName="";
            char ch[]=tokens.nextToken().toCharArray();

            length=ch.length;
            //JOptionPane.showMessageDialog(rootPane,String.valueOf(ch)+" length is "+length);
            for(i=0;i<length;++i){
            if(ch[i]=='"'){
            ++count;
            }
            if(ch[i]=='^'){
            ++commentCount;
            }
            
            if( ch[i]==' ' || ch[i]=='.' || ch[i]=='(' || ch[i]==')' || ch[i]==';' || ch[i]==',' ){
            
            Line+=process(temp.trim(),count,commentCount);
            
            
            
            //JOptionPane.showMessageDialog(rootPane,temp.trim());
            Line+=ch[i];
            
            
            //System.out.println(temp.trim());
            
            if(temp.trim().equals("class") && flag==false){
            
            Line+="use_temp";
            while(!Character.isAlphabetic(ch[i])){
            i++;
            }
            while(Character.isAlphabetic(ch[i]) || Character.isDigit(ch[i])){
            i++;
            }
            Line+=ch[i];
            
            }
            
            
            
            
            temp="";
            }else{
            temp+=ch[i];
            
            }
            }
            Line+=temp+"\n";
            try {
            
            writer.write(Line);
            } catch (IOException ex) {
            Logger.getLogger(Editorz.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            }
            
            outputArea.setText("Success");
            Line="";
            try {
            writer.close();
            } catch (IOException ex) {
            Logger.getLogger(Editorz.class.getName()).log(Level.SEVERE, null, ex);
            }
            String Command[]={"cmd.exe","/c","Start","C:\\Users\\Krish\\Documents\\NetBeansProjects\\JetzApplication\\runExe.bat"};
            try {
            Process run=Runtime.getRuntime().exec(Command);
            } catch (IOException ex) {
            Logger.getLogger(Editorz.class.getName()).log(Level.SEVERE, null, ex);
            }
            */
        
    }//GEN-LAST:event_runButtonActionPerformed

    private void compileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileButtonActionPerformed
        String strings=editorArea.getText();
        JetzCompilerClass compiler=new JetzCompilerClass();
        String message[]=compiler.compile(strings);
        if(message[1].length()==0){
            outputArea.setText("No Error");
            className=message[0];
        }else{
            
            char result[]=message[1].toCharArray();
            String col="";
            for(int a=0;a<result.length;a++){
                
                if( result[a]=='j' && result[a+1]=='a' && result[a+2]=='v' && result[a+3]=='a' ){
                    col+="jetz";
                    
                    a=a+3;
                    continue;
                }
                col+=result[a];   
            }
            
            
            outputArea.setText(col);
        }
        
        
        
        
        //outputArea.setText(message);
    }//GEN-LAST:event_compileButtonActionPerformed

    String process(String s,int count,int cc){
        
        if(s.equals(" ")){
            return "";
        }
        
        if(s.equals("^") && cc%2!=0){
            System.out.println("came to /*  "+cc);
            return "/*";
        }

        
        if((count%2==0) && (cc%2==0)){
            
        if(s.equals("^")){
            return "*/";
        }
        if(s.equals("use")){
            return "import";
        }
        if(s.equals("jetz")){
            return "java";
        }
        if(s.equals("zInt")){
            return "int";
        }
        if(s.equals("zFloat")){
            return "float";
        }
        if(s.equals("zString")){
            return "String";
        }
        if(s.equals("zBoolean")){
            return "boolean";
        }
        if(s.equals("zDouble")){
            return "double";
        }
        if(s.equals("zPrint")){
            return "System.out.print";
        }
        if(s.equals("zPrintLine")){
            return "System.out.println";
        }
        if(s.equals("zReader")){
            return "Scanner";
        }
        if(s.equals("nextzInt")){
            return "nextInt";
        }
        if(s.equals("nextzFloat")){
            return "nextFloat";
        }
        if(s.equals("nextzDouble"))
            return "nextDouble";
        }
        if(s.equals("iando")){
            return "io.*;import java.util.Scanner";
        }
        if(s.equals("zSystemInput")){
            return "System.in";
        }if(s.equals("nextzString")){
            return "next";
        }
        if(s.equals("nextzStringLine")){
            return "nextLine";
        }
        
        
        return s;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editorz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editorz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editorz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editorz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editorz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton compileButton;
    private javax.swing.JTextArea editorArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JButton runButton;
    // End of variables declaration//GEN-END:variables
}
